# action pour se baisser (voir description du format des actions)
# action pour sauter direction la gauche

action: "JUMP_TO_LEFT"
description:
  type: "{SIMPLE}"
  keyboard:
    type: [ "{ COMBINED-TOUCH }","{ SEQUENCE }" ]
    touch: [ "{ SPACE_BAR }","{ RIGHT_LEFT }" ]
    sequence:
      step-1:
        pre-actions: [
          "STORE(({ POS_REFERENCE_Y } + { PLAYER_POS_Y }),PLAYER_BASE_Y_JUMP_TO_RIGHT)",
          "STORE(15,PLAYER_JUMP_HEIGHT_JUMP_TO_RIGHT)",
          "STORE(30,SPEED_X_JUMP_TO_LEFT)",
          "STORE(30,SPEED_Y_JUMP_TO_LEFT)"
        ]
        to-do: [
          "{ PLAYER_POS_X } = ({ PLAYER_POS_X } - { SPEED_X_JUMP_TO_LEFT } )",
          "{ PLAYER_POS_Y } = ({ PLAYER_POS_Y } + { SPEED_Y_JUMP_TO_LEFT } )"
        ]
        cond: [
          "SUPERIOR(({ PLAYER_BASE_Y_JUMP_TO_LEFT } + { PLAYER_JUMP_HEIGHT_JUMP_TO_LEFT }),({ POS_REFERENCE_Y } + { PLAYER_Y_POS }))"
        ]
        images: [ 1,2,3,4 ]
        end-actions: [
          "FREE(PLAYER_JUMP_HEIGHT_JUMP_TO_LEFT)",
          "FREE(PLAYER_BASE_Y_JUMP_JUMP_TO_LEFT)"
        ]
      step-2:
        to-do:
          pre-actions: []
          images: [ 1,2,3,4 ]
          to-do: [
            "{ PLAYER_POS_X } = ({ PLAYER_POS_X } - { SPEED_X_JUMP_TO_LEFT } )",
            "{ PLAYER_POS_Y } = ({ PLAYER_POS_Y } - { SPEED_Y_JUMP_TO_LEFT } )"
          ]
          end-actions: [
            "FREE(SPEED_X_JUMP_TO_LEFT)",
            "FREE(SPEED_Y_JUMP_TO_LEFT)"
          ]
          cond: [
            "SUPERIOR(({ POS_REFERENCE_Y } + { PLAYER_POS_Y }),{ POS_REFERENCE_Y } )"
          ]
  gamepad:
    type: [ "{ SIMPLE }","{ SEQUENCE-REFERENCE }","{ CONDITION }" ]
    touch: "{ GAMEPAD_X_TOUCH }"
    cond: [ "INFERIOR({ GAMEPAD_AXIS_LEFT_X },-0.3)" ]
    sequence-reference: "../keyboard/sequence"