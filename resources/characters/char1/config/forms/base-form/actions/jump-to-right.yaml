# action pour se baisser (voir description du format des actions)
# action pour aller sur la droite

action: "JUMP_TO_RIGHT"
description:
  type: "{REPEATABLE}"
  count-of-repeat: 2
  keyboard:
    type: ["{COMBINED-TOUCH}","{SEQUENCE}"]
    touch: ["{SPACE-BAR}","{ARROW-RIGHT}"]
    sequence:
      step-1:
        pre-actions: [
          "STORE(FORMULA({ POS_REFERENCE_Y } + { PLAYER_POS_Y }),{ PLAYER_BASE_Y_JUMP_TO_RIGHT })",
          "STORE(15,PLAYER_JUMP_HEIGHT_JUMP_TO_RIGHT)",
          "STORE(30,SPEED_X_JUMP_TO_RIGHT)",
          "STORE(30,SPEED_Y_JUMP_TO_RIGHT)"
        ]
        to-do: [
          "UPDATE({PLAYER_POS_X} ,FORMULA({PLAYER_POS_X} + {SPEED_X_JUMP_TO_RIGHT} ))",
          "UPDATE({PLAYER_POS_Y} ,FORMULA({PLAYER_POS_Y} + {SPEED_Y_JUMP_TO_RIGHT} ))"
        ]
        cond: [
          "SUPERIOR(FORMULA({PLAYER_BASE_Y_JUMP_TO_RIGHT} + {PLAYER_JUMP_HEIGHT_JUMP_TO_RIGHT}),FORMULA({POS_REFERENCE_Y} + {PLAYER_Y_POS}))"
        ]
        images: [1,2,3,4]
        end-actions: [
          "FREE({PLAYER_JUMP_HEIGHT_JUMP_TO_RIGHT})",
          "FREE({PLAYER_BASE_Y_JUMP_TO_RIGHT})"
        ]
      step-2:
        to-do:
          pre-actions: []
          images : [1,2,3,4]
          to-do: [
            "UPDATE({ PLAYER_POS_X } ,FORMULA({ PLAYER_POS_X } + { SPEED_X_JUMP_TO_RIGHT } ))",
            "UPDATE({ PLAYER_POS_Y } ,FORMULA({ PLAYER_POS_Y } - { SPEED_Y_JUMP_TO_RIGHT } ))"
          ]
          end-actions: [
            "FREE({SPEED_X_JUMP_TO_RIGHT})",
            "FREE({SPEED_Y_JUMP_TO_RIGHT})"
          ]
          cond: [
            "SUPERIOR(FORMULA({ POS_REFERENCE_Y } + { PLAYER_POS_Y }),{ POS_REFERENCE_Y } )"
          ]
  gamepad:
    type: [ "{ SIMPLE }","{ SEQUENCE-REFERENCE }","{ CONDITION }" ]
    touch: "{ GAMEPAD-X-TOUCH }"
    cond: [ "SUPERIOR({ GAMEPAD_AXIS_LEFT_X },0.3)" ]
    sequence-reference: "../keyboard/sequence"